name: release

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NUGET_PUSH_SOURCE: https://api.nuget.org/v3/index.json
  NUGET_OUT_DIR: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh
    working-directory: ./

on: 
  push:
    # matched against refs/heads
    # branches-ignore:
    # - develop
    # matched against ref/tags
    tags:
    - 1.*
    - 2.*
  workflow_dispatch:  # Allow running the workflow manually from the GitHub UI
  release:
    types:
      - published # Run the workflow when a new GitHub release is published

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x']
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # get all history to allow MinVer to work.
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}      
      - name: Install dependencies
        
        run: dotnet restore
      - name: Build
        # Create the NuGet package in the folder from the environment variable NuGetDirectory
        run: |
          dotnet build ElmahCore.MsSql\ElmahCore.sql.csproj --configuration Release --output ${{ env.NUGET_OUT_DIR }}
          dotnet build ElmahCore.Postgresql\ElmahCore.Postgresql.csproj --configuration Release --output ${{ env.NUGET_OUT_DIR }}
          dotnet build ElmahCore.MySql\ElmahCore.MySql.csproj --configuration Release --output ${{ env.NUGET_OUT_DIR }}
          dotnet build ElmahCore.Mvc\ElmahCore.Mvc.csproj --configuration Release --output ${{ env.NUGET_OUT_DIR }}
          dotnet build ElmahCore\ElmahCore.csproj --configuration Release --output ${{ env.NUGET_OUT_DIR }}
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NUGET_OUT_DIR }}/*.*nupkg
  deploy:
      runs-on: ubuntu-latest
      needs: [build]
      steps:
        # Download the NuGet package created in the previous job
        - uses: actions/download-artifact@v3
          with:
            name: nuget
            path: ${{ env.NuGetDirectory }}        
        # Install the .NET SDK indicated in the global.json file
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v3
        - name: Publish
          env:
            API_KEY: ${{ secrets.NUGET_APIKEY }}
            SOURCE: ${{ env.NuGetDirectory }}        
          # if: startsWith(github.ref, 'refs/heads/release')
          run: nuget push **/*.nupkg -Source ${{ env.SOURCE }} -ApiKey ${{ env.API_KEY }} -SkipDuplicate

